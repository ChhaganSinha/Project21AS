@using Project21AS.Client.Client
@using Project21AS.Client.Shared.ChartJs
@inject IJSRuntime JSRuntime
@inject AppClient client
@inject NavigationManager NavManager

<canvas id="@Id" style="width:100%; height: 200px;"></canvas>

@code {
    [Parameter]
    public string Id { get; set; }

    [Parameter]
    public ChartType Type { get; set; }

    [Parameter]
    public string[] Data { get; set; }

    [Parameter]
    public string[] BackgroundColor { get; set; }

    [Parameter]
    public string[] Labels { get; set; }

    [Parameter]
    public string[] Ids { get; set; }

    [Parameter]
    public string Company { get; set; }

    [Parameter]
    public bool Responsive { get; set; } = true;

    [Parameter]
    public bool IsStacked { get; set; }

    [Parameter]
    public List<ChartJsDataset> Datasets { get; set; }

    [Parameter]
    public EventCallback<int> OnChartClick { get; set; }

    [Parameter]
    public bool IsClickable { get; set; } = true;

    [Parameter]
    public int borderRadius { get; set; } = 0;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {

        if (Data == null || Data.Count() == 0)
            return;

        var config = new
        {

            Type = Type.ToString(),
            Options = new
            {
                maintainAspectRatio = false,
                Responsive = Responsive,
                rotation = 270,
                circumference = 180,
                cutout = "80%"
            },

            Data = new
            {
                Datasets = new[]
                                    {
                    new { Data = Data, BackgroundColor = BackgroundColor, Company = Company}

                },
                Labels = Labels,
                Ids = Ids,
                borderWidth = 2,
                borderRadius = borderRadius,
            }
        };
        var ObjRef = DotNetObjectReference.Create(this);
        await JSRuntime.InvokeVoidAsync("setup", Id, config, ObjRef);
    }

    [JSInvokable]
    public async Task ChartClick(string cmp, string label, string ChartId)
    {
        NavManager.NavigateTo($"/allocations/{cmp}/{label}");
    }
}
